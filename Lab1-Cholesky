import numpy as np

def cholesky(A, B):
    n = len(A)
    L = np.zeros((n, n))
    
    for i in range(n):
        for j in range(i + 1):
            if i == j:
                L[i, j] = np.sqrt(A[i, i] - sum(L[i, k]**2 for k in range(j)))
            else:
                L[i, j] = (A[i, j] - sum(L[i, k] * L[j, k] for k in range(j))) / L[j, j]

    y = np.linalg.solve(L, B)
    x = np.linalg.solve(L.T, y)
    return L, L.T, x

A = np.array([[4, 12, -16],
              [12, 37, -43],
              [-16, -43, 98]], dtype=float)
B = np.array([1, 2, 3], dtype=float)
L, U, x = cholesky(A, B)
print(f"The lower triangular matrix L is \n{L}")
print(f"\nThe upper triangular matrix U (L.T) is \n{U}")
print(f"\nSolution X: {x}")
