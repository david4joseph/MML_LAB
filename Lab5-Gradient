import sympy as sp

def Gradient(f,x):
    for i in range(f.shape[0]):
        for j in range(f.shape[1]):
            mat_2 = sp.zeros(x.shape[0], x.shape[1])
            for k in range(x.shape[0]):
                for l in range(x.shape[1]):
                    mat_2[k,l] = sp.diff(f[i,j],x[k,l])
            display(mat_2)

x0,x1,x2,x3 = sp.symbols('x0 x1 x2 x3')
f = sp.Matrix([[sp.sin(x0 + 2*x1), 2*x1 + x3], [2*x0 + x2, sp.cos(2*x1+x3)]])
x = sp.Matrix([[x0,x1],[x2,x3]])
grad = Gradient(f,x)
###############################################################################################

from sympy import *
x0,x1,x2,x3 = symbols("x0 x1 x2 x3")
f = Matrix([[x0*x0*x1*x2, x1*x1*x2*x3], [x3*x3*x1*x3, (x2**3)*x1]])

gradient_f = Matrix(2, 2, lambda i, j: Matrix([
    [f[i,j].diff(x0), f[i,j].diff(x1)],
    [f[i,j].diff(x2), f[i,j].diff(x3)]
]))
display(gradient_f)
